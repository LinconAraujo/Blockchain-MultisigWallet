{"version":3,"sources":["components/Header/index.js","components/Transfer/index.js","components/Transfer/list.js","utils.js","App.js","index.js"],"names":["Header","approvers","quorum","map","approver","Transfer","createTransfer","useState","transfer","setTransfer","updateTransfer","e","field","value","target","onSubmit","preventDefault","submit","htmlFor","id","type","onChange","TransferList","transfers","approveTransfer","amount","to","approvals","onClick","sent","getWallet","web3","a","eth","Contract","Wallet","abi","App","undefined","setWeb3","accounts","setAccounts","wallet","setWallet","setApprovers","setQuorum","setTransfers","loading","setLoading","useEffect","Promise","resolve","reject","detectEthereumProvider","provider","request","method","Web3","window","ethereum","error","getAccounts","methods","getApprovers","call","init","getTransfers","length","className","send","from","then","transferId","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ce7f55c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ approvers, quorum }) => {\n  return (\n    <>\n      <header>\n        <ul>\n          <li>\n            <strong>Approvers:</strong>\n            <ol>\n              {approvers.map((approver) => (\n                <li>{approver}</li>\n              ))}\n            </ol>\n          </li>\n          <li>\n            <strong>Quorum:</strong> {quorum}\n          </li>\n        </ul>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nconst Transfer = ({ createTransfer }) => {\n  const [transfer, setTransfer] = useState(0);\n\n  const submit = (e) => {\n    e.preventDefault();\n    createTransfer(transfer);\n  };\n\n  const updateTransfer = (e, field) => {\n    const { value } = e.target;\n    setTransfer({ ...transfer, [field]: value });\n  };\n\n  return (\n    <>\n      <h2>Create transfer</h2>\n      <form onSubmit={(e) => submit(e)}>\n        <label htmlFor=\"amount\">Amount</label>\n        <input\n          id=\"amount\"\n          type=\"text\"\n          onChange={(e) => updateTransfer(e, \"amount\")}\n        />\n\n        <label htmlFor=\"to\">To</label>\n        <input id=\"to\" type=\"text\" onChange={(e) => updateTransfer(e, \"to\")} />\n        <button>Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default Transfer;\n","import React from \"react\";\n\nconst TransferList = ({ transfers, approveTransfer }) => {\n  return (\n    <>\n      <h2>Transfers</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Amount</th>\n            <th>To</th>\n            <th>Approvals</th>\n            <th>sent</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transfers.map((transfer) => (\n            <tr key={transfer.id}>\n              <td>{transfer.id}</td>\n              <td>{transfer.amount}</td>\n              <td>{transfer.to}</td>\n              <td>\n                {transfer.approvals}&nbsp;\n                <button onClick={() => approveTransfer(transfer.id)}>\n                  Approve\n                </button>\n              </td>\n              <td>{transfer.sent ? \"yes\" : \"no\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TransferList;\n","import detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport Web3 from \"web3\";\nimport Wallet from \"./contracts/Wallet.sol/Wallet.json\";\n\nconst getWeb3 = () =>\n  new Promise(async (resolve, reject) => {\n    let provider = await detectEthereumProvider();\n\n    if (provider) {\n      await provider.request({ method: \"eth_requestAccounts\" });\n\n      try {\n        const web3 = new Web3(window.ethereum);\n\n        resolve(web3);\n      } catch (error) {\n        reject(error);\n      }\n    }\n    reject(\"Install Metamask\");\n  });\n\nconst getWallet = async (web3) => {\n  // const networkId = await web3.eth.net.getId();\n  // const deployedNetwork = Wallet.networks[networkId];\n\n  return new web3.eth.Contract(\n    Wallet.abi,\n    \"0x2D35F556A6CAf4E345fF277A9798CfFFE51a15aB\"\n  );\n};\n\nexport { getWeb3, getWallet };\n","import React, { useEffect, useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Transfer from \"./components/Transfer\";\nimport TransferList from \"./components/Transfer/list\";\n\nimport { getWallet, getWeb3 } from \"./utils\";\n\nconst App = () => {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  const [transfers, setTransfers] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n\n      setApprovers(approvers);\n      setQuorum(quorum);\n\n      setLoading(true);\n    };\n\n    init();\n  }, []);\n\n  useEffect(() => {\n    const init = async () => {\n      const transfers = await wallet.methods.getTransfers().call();\n      setTransfers(transfers);\n\n      setLoading(false);\n    };\n\n    !loading || init();\n  }, [loading, wallet]);\n\n  const createTransfer = (transfer) => {\n    wallet.methods\n      .createTransfer(transfer.amount, transfer.to)\n      .send({ from: accounts[0] })\n      .then(() => setLoading(true));\n  };\n\n  const approveTransfer = (transferId) => {\n    wallet.methods\n      .approveTransfer(transferId)\n      .send({ from: accounts[0] })\n      .then(() => {\n        console.log(\"r\");\n        setLoading(true);\n      });\n  };\n\n  if (\n    typeof web3 === undefined ||\n    typeof accounts === undefined ||\n    typeof wallet === undefined ||\n    approvers.length === 0 ||\n    typeof quorum === undefined\n  )\n    return <div>Loading...</div>;\n\n  return (\n    <div className=\"App\">\n      <Header approvers={approvers} quorum={quorum}></Header>\n      <Transfer createTransfer={createTransfer} />\n      <TransferList transfers={transfers} approveTransfer={approveTransfer} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}